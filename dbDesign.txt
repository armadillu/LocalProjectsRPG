// C++ //////////////////////////////////////////////////////////////////////////

struct Question{
	string text;
}

struct Token{
	string name;
}

struct TokenValue{	
	int positive;
	int negative;
}

vector<Token> 				tokens;		// listing of all tokens
vector<Questions> 			questions;	// listing of all questions
vector< vector<Questions> > gameRounds;	// clusters of questions, idx is round #

// Dict key is "question", value is another Dict with token and its tokenValues for that question
// if a questions has a missing token definition, we assume token values to be 0,0

map< string, map<Token,TokenValue> > questionPoints;

// json ////////////////////////////////////////////////////////////////////////

// questionID will be ("question_" + "_id") 
// tokenID will be ("token_" + "_id")
// "_id" being mongoDB objectID

var questions = 
[
	{
		"questionID" : "question1",
		"question" : "what are monkeys?"
	},
	{
		"questionID" : "question2",
		"question" : "what are bananas?"
	},
	{
		"questionID" : "question3",
		"question" : "what are we doing here?"
	}
]


var tokens = 
[
	{
		"tokenID" : "token1",
		"token" : "Income Tax"
	},
	{
		"tokenID" : "token2",
		"token" : "Education Level"
	},
	{
		"tokenID" : "token3",
		"token" : "Public Health"	
	}
]


var questionTokenValues = 
[
	{ 
		questionID: 'question1', 
		tokenValues:	[ 
							{ 
								tokenID: 'token1',
								values: {yes:0, no:5}
							},
							{
								tokenID: 'token2',
								values:	{yes:-3, no:2}
							}, 
							{
								tokenID: 'token3',
								values:	{yes:5, no:-3}
							}
						]
	},
	{ 
		questionID: 'question2', 
		tokenValues:	[ 
							{ 
								tokenID: 'token1',
								values: {yes:1, no:1}
							},
							{
								tokenID: 'token2',
								values:	{yes:3, no:2}
							}, 
							{
								tokenID: 'token3',
								values:	{yes:2, no:0}
							}
						]
	}
]

